[oracle@DB12c AWR_MINING]$ ls -la
total 52
drwxrwxr-x.  2 oracle oracle 4096 Nov 17 15:31 .
drwx------. 37 oracle oracle 4096 Nov 18 08:02 ..
-rw-rw-r--.  1 oracle oracle  637 Nov 17 15:06 awr_show_sqlid.sql
-rw-r--r--.  1 oracle oracle 2083 Nov 17 14:19 awr_sqlid_perf_trend_by_plan.sql
-rw-r--r--.  1 oracle oracle 1764 Oct 20 16:35 awr_top_by_fms_detail_snaps.sql
-rw-r--r--.  1 oracle oracle 1710 Nov 17 15:03 awr_top_by_fms_snaps.sql
-rw-r--r--.  1 oracle oracle 1753 Oct 20 16:09 awr_top_by_plan_detail_snaps.sql
-rw-r--r--.  1 oracle oracle 1719 Nov 17 15:27 awr_top_by_plan_snaps.sql
-rw-r--r--.  1 oracle oracle 1756 Nov 17 14:36 awr_top_by_sqlid_snaps.sql
-rw-rw-r--.  1 oracle oracle 1204 Nov 17 15:07 awr_top_fms_demo.sql
-rw-rw-r--.  1 oracle oracle 1092 Nov 17 15:31 awr_top_plan_demo.sql
-rw-rw-r--.  1 oracle oracle 1532 Nov 17 15:00 awr_top_sqlid_demo.sql
-rw-rw-r--.  1 oracle oracle 3352 Oct 20 16:41 identification_demo.sql
[oracle@DB12c AWR_MINING]$
[oracle@DB12c AWR_MINING]$ sqlplus / as sysdba

SQL*Plus: Release 12.1.0.1.0 Production on Tue Nov 18 09:06:12 2014

Copyright (c) 1982, 2013, Oracle.  All rights reserved.


Connected to:
Oracle Database 12c Enterprise Edition Release 12.1.0.1.0 - 64bit Production
With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options

SQL> @identification_demo.sql
SQL>
SQL>
SQL> alter system flush shared_pool;

System altered.

SQL> /

System altered.

SQL> /

System altered.

SQL> alter session set container = sample;

Session altered.

SQL>
SQL> -- Take a look at different SQL_IDs!
SQL> pause

SQL>
SQL> select /*testquery*/ count(*) from oe.orders;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS          ;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
7ufgv9vacpz85 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
7ufgv9vacpz85 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
5r3bkn8z76sq5 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
5r3bkn8z76sq5 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47
bcr3qj4vmuzj1 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
byypbc0t7q2br SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1                                                62
5r3bkn8z76sq5 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47
bcr3qj4vmuzj1 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54

6 rows selected.

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1000;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
byypbc0t7q2br SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1                                                62
5r3bkn8z76sq5 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47
bcr3qj4vmuzj1 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54
9kj5umranz695 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1000                                             65

7 rows selected.

SQL> pause

SQL>
SQL> var a number
SQL> var b number
SQL> exec :a:=-1

PL/SQL procedure successfully completed.

SQL> exec :b:=-1

PL/SQL procedure successfully completed.

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:a;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
byypbc0t7q2br SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1                                                62
5r3bkn8z76sq5 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47
bcr3qj4vmuzj1 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54
9kj5umranz695 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1000                                             65
2jxwr5vdfp1zv SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:a                                                62

8 rows selected.

SQL> pause

SQL>
SQL> SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:b;

  COUNT(*)
----------
       105

SQL> pause

SQL>
SQL> select sql_id, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by LAST_LOAD_TIME;

SQL_ID        SQL_TEXT                                                                                              SQL_LENGTH
------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
byypbc0t7q2br SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1                                                62
5r3bkn8z76sq5 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47
bcr3qj4vmuzj1 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54
9kj5umranz695 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1000                                             65
2jxwr5vdfp1zv SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:a                                                62
f90ycm0wk1urp SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:b                                                62

9 rows selected.

SQL> pause

SQL>
SQL> -- Do you know of any other SQL identification methods?
SQL> pause

SQL> -- Any other?
SQL> pause

SQL> -- What about EXACT_MATCHING_SIGNATURE?
SQL> pause

SQL>
SQL> break on EXACT_MATCHING_SIGNATURE duplicates skip 1
SQL> select sql_id, exact_matching_signature, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by 2, LAST_LOAD_TIME;

SQL_ID         EXACT_MATCHING_SIGNATURE SQL_TEXT                                                                                              SQL_LENGTH
------------- ------------------------- ---------------------------------------------------------------------------------------------------- -----------
bcr3qj4vmuzj1       1917735050037348462 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54

f90ycm0wk1urp       5642286950026349691 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:b                                                62

9kj5umranz695       6861089955825787148 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1000                                             65

f3jjwdqz71dcy       7560235921535299854 select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553       7560235921535299854 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85       7560235921535299854 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
5r3bkn8z76sq5       7560235921535299854 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47

2jxwr5vdfp1zv      13805308688061585668 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:a                                                62

byypbc0t7q2br      15411379419093560071 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1                                                62


9 rows selected.

SQL> pause

SQL>
SQL> -- You must have heard of FORCE_MATCHING_SIGNATURE too
SQL> pause

SQL>
SQL> clear breaks
SQL> break on FORCE_MATCHING_SIGNATURE duplicates skip 1;
SQL> select sql_id, exact_matching_signature, force_matching_signature, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by 3, LAST_LOAD_TIME;

SQL_ID         EXACT_MATCHING_SIGNATURE  FORCE_MATCHING_SIGNATURE SQL_TEXT                                                                                              SQL_LENGTH
------------- ------------------------- ------------------------- ---------------------------------------------------------------------------------------------------- -----------
f90ycm0wk1urp       5642286950026349691       5642286950026349691 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:b                                                62

f3jjwdqz71dcy       7560235921535299854       7560235921535299854 select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553       7560235921535299854       7560235921535299854 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85       7560235921535299854       7560235921535299854 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
5r3bkn8z76sq5       7560235921535299854       7560235921535299854 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47

byypbc0t7q2br      15411379419093560071       8639627088589992892 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1                                                62
9kj5umranz695       6861089955825787148       8639627088589992892 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1000                                             65

2jxwr5vdfp1zv      13805308688061585668      13805308688061585668 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:a                                                62

bcr3qj4vmuzj1       1917735050037348462      15184701051591850165 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54


9 rows selected.

SQL> pause

SQL>
SQL> -- This doesn't really identofy the SQL statement, but take a look what happens if we group them by PLAN_HASH_VALUE
SQL> pause

SQL>
SQL> clear breaks
SQL> break on PLAN_HASH_VALUE duplicates skip 1;
SQL> select sql_id, exact_matching_signature, force_matching_signature, plan_hash_value, sql_text, length(sql_text) sql_length from v$sql where sql_text like '%/*test'||'query%*/%' order by 4, LAST_LOAD_TIME;

SQL_ID         EXACT_MATCHING_SIGNATURE  FORCE_MATCHING_SIGNATURE PLAN_HASH_VALUE SQL_TEXT                                                                                              SQL_LENGTH
------------- ------------------------- ------------------------- --------------- ---------------------------------------------------------------------------------------------------- -----------
f3jjwdqz71dcy       7560235921535299854       7560235921535299854      2738315105 select /*testquery*/ count(*) from oe.orders                                                                  44
fh24xkqaw0553       7560235921535299854       7560235921535299854      2738315105 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  44
7ufgv9vacpz85       7560235921535299854       7560235921535299854      2738315105 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS                                                                  54
5r3bkn8z76sq5       7560235921535299854       7560235921535299854      2738315105 SELECT /*testquery*/ COUNT(*) FROM    OE.ORDERS                                                               47
bcr3qj4vmuzj1       1917735050037348462      15184701051591850165      2738315105 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE 1=1                                                        54

byypbc0t7q2br      15411379419093560071       8639627088589992892      4223739315 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1                                                62
9kj5umranz695       6861089955825787148       8639627088589992892      4223739315 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>-1000                                             65
2jxwr5vdfp1zv      13805308688061585668      13805308688061585668      4223739315 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:a                                                62
f90ycm0wk1urp       5642286950026349691       5642286950026349691      4223739315 SELECT /*testquery*/ COUNT(*) FROM OE.ORDERS WHERE order_id>:b                                                62


9 rows selected.

SQL> pause

SQL>
SQL> exit
Disconnected from Oracle Database 12c Enterprise Edition Release 12.1.0.1.0 - 64bit Production
With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options
[oracle@DB12c AWR_MINING]$ sqlplus / as sysdba

SQL*Plus: Release 12.1.0.1.0 Production on Tue Nov 18 09:06:46 2014

Copyright (c) 1982, 2013, Oracle.  All rights reserved.


Connected to:
Oracle Database 12c Enterprise Edition Release 12.1.0.1.0 - 64bit Production
With the Partitioning, OLAP, Advanced Analytics and Real Application Testing options

SQL> @awr_top_sqlid_demo.sql
SQL> alter session set container = sample;

Session altered.

SQL>
SQL> -- if you want to stat digging into AWR you don't have to know all the tables - 2 is enough!
SQL> pause

SQL>
SQL> desc dba_hist_snapshot
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 SNAP_ID                                               NOT NULL NUMBER
 DBID                                                  NOT NULL NUMBER
 INSTANCE_NUMBER                                       NOT NULL NUMBER
 STARTUP_TIME                                          NOT NULL TIMESTAMP(3)
 BEGIN_INTERVAL_TIME                                   NOT NULL TIMESTAMP(3)
 END_INTERVAL_TIME                                     NOT NULL TIMESTAMP(3)
 FLUSH_ELAPSED                                                  INTERVAL DAY(5) TO SECOND(1)
 SNAP_LEVEL                                                     NUMBER
 ERROR_COUNT                                                    NUMBER
 SNAP_FLAG                                                      NUMBER
 SNAP_TIMEZONE                                                  INTERVAL DAY(0) TO SECOND(0)
 CON_ID                                                         NUMBER

SQL> pause

SQL>
SQL> desc dba_hist_sqlstat
 Name                                                  Null?    Type
 ----------------------------------------------------- -------- ------------------------------------
 SNAP_ID                                               NOT NULL NUMBER
 DBID                                                  NOT NULL NUMBER
 INSTANCE_NUMBER                                       NOT NULL NUMBER
 SQL_ID                                                NOT NULL VARCHAR2(13)
 PLAN_HASH_VALUE                                       NOT NULL NUMBER
 OPTIMIZER_COST                                                 NUMBER
 OPTIMIZER_MODE                                                 VARCHAR2(10)
 OPTIMIZER_ENV_HASH_VALUE                                       NUMBER
 SHARABLE_MEM                                                   NUMBER
 LOADED_VERSIONS                                                NUMBER
 VERSION_COUNT                                                  NUMBER
 MODULE                                                         VARCHAR2(64)
 ACTION                                                         VARCHAR2(64)
 SQL_PROFILE                                                    VARCHAR2(64)
 FORCE_MATCHING_SIGNATURE                                       NUMBER
 PARSING_SCHEMA_ID                                              NUMBER
 PARSING_SCHEMA_NAME                                            VARCHAR2(128)
 PARSING_USER_ID                                                NUMBER
 FETCHES_TOTAL                                                  NUMBER
 FETCHES_DELTA                                                  NUMBER
 END_OF_FETCH_COUNT_TOTAL                                       NUMBER
 END_OF_FETCH_COUNT_DELTA                                       NUMBER
 SORTS_TOTAL                                                    NUMBER
 SORTS_DELTA                                                    NUMBER
 EXECUTIONS_TOTAL                                               NUMBER
 EXECUTIONS_DELTA                                               NUMBER
 PX_SERVERS_EXECS_TOTAL                                         NUMBER
 PX_SERVERS_EXECS_DELTA                                         NUMBER
 LOADS_TOTAL                                                    NUMBER
 LOADS_DELTA                                                    NUMBER
 INVALIDATIONS_TOTAL                                            NUMBER
 INVALIDATIONS_DELTA                                            NUMBER
 PARSE_CALLS_TOTAL                                              NUMBER
 PARSE_CALLS_DELTA                                              NUMBER
 DISK_READS_TOTAL                                               NUMBER
 DISK_READS_DELTA                                               NUMBER
 BUFFER_GETS_TOTAL                                              NUMBER
 BUFFER_GETS_DELTA                                              NUMBER
 ROWS_PROCESSED_TOTAL                                           NUMBER
 ROWS_PROCESSED_DELTA                                           NUMBER
 CPU_TIME_TOTAL                                                 NUMBER
 CPU_TIME_DELTA                                                 NUMBER
 ELAPSED_TIME_TOTAL                                             NUMBER
 ELAPSED_TIME_DELTA                                             NUMBER
 IOWAIT_TOTAL                                                   NUMBER
 IOWAIT_DELTA                                                   NUMBER
 CLWAIT_TOTAL                                                   NUMBER
 CLWAIT_DELTA                                                   NUMBER
 APWAIT_TOTAL                                                   NUMBER
 APWAIT_DELTA                                                   NUMBER
 CCWAIT_TOTAL                                                   NUMBER
 CCWAIT_DELTA                                                   NUMBER
 DIRECT_WRITES_TOTAL                                            NUMBER
 DIRECT_WRITES_DELTA                                            NUMBER
 PLSEXEC_TIME_TOTAL                                             NUMBER
 PLSEXEC_TIME_DELTA                                             NUMBER
 JAVEXEC_TIME_TOTAL                                             NUMBER
 JAVEXEC_TIME_DELTA                                             NUMBER
 IO_OFFLOAD_ELIG_BYTES_TOTAL                                    NUMBER
 IO_OFFLOAD_ELIG_BYTES_DELTA                                    NUMBER
 IO_INTERCONNECT_BYTES_TOTAL                                    NUMBER
 IO_INTERCONNECT_BYTES_DELTA                                    NUMBER
 PHYSICAL_READ_REQUESTS_TOTAL                                   NUMBER
 PHYSICAL_READ_REQUESTS_DELTA                                   NUMBER
 PHYSICAL_READ_BYTES_TOTAL                                      NUMBER
 PHYSICAL_READ_BYTES_DELTA                                      NUMBER
 PHYSICAL_WRITE_REQUESTS_TOTAL                                  NUMBER
 PHYSICAL_WRITE_REQUESTS_DELTA                                  NUMBER
 PHYSICAL_WRITE_BYTES_TOTAL                                     NUMBER
 PHYSICAL_WRITE_BYTES_DELTA                                     NUMBER
 OPTIMIZED_PHYSICAL_READS_TOTAL                                 NUMBER
 OPTIMIZED_PHYSICAL_READS_DELTA                                 NUMBER
 CELL_UNCOMPRESSED_BYTES_TOTAL                                  NUMBER
 CELL_UNCOMPRESSED_BYTES_DELTA                                  NUMBER
 IO_OFFLOAD_RETURN_BYTES_TOTAL                                  NUMBER
 IO_OFFLOAD_RETURN_BYTES_DELTA                                  NUMBER
 BIND_DATA                                                      RAW(2000)
 FLAG                                                           NUMBER
 CON_DBID                                                       NUMBER
 CON_ID                                                         NUMBER

SQL> pause

SQL> -- CAREFUL WITH THE SNAP_IDs!!!
SQL> pause

SQL>
SQL>
SQL> set lines 238
SQL> -- Look at this crazy script!
SQL> !cat awr_top_by_sqlid_snaps.sql

set ver off pages 50000 lines 260 tab off echo off
undef snap_id_from
undef snap_id_to
undef sort_col_nr
undef top_n
def snap_id_from="&1"
def snap_id_to="&2"
def sort_col_nr="&3"
def top_n="&4"
col inst for 9999
col time for a19
col executions for 9999999999
col rows_processed for 999999999999.999
col elapsed_time_s for 9999999.999
col cpu_time_s for 9999999.999
col iowait_s for 9999999.999
col clwait_s for 9999999.999
col apwait_s for 9999999.999
col ccwait_s for 9999999.999
col buffer_gets for 9999999999999999
col disk_reads for 9999999999999999
col direct_writes for 9999999999999999
col diff_plan for a10
col diff_fms for a20

select * from (
select
    hss.sql_id,
    decode(count(unique(plan_hash_value)),1,to_char(max(plan_hash_value)),'#'||count(unique(plan_hash_value))) diff_plan,
    decode(count(unique(force_matching_signature)),1,to_char(max(force_matching_signature)),'#'||count(unique(force_matching_signature))) diff_fms,
    sum(hss.executions_delta) executions,
    round(sum(hss.elapsed_time_delta)/1000000,3) elapsed_time_s,
    round(sum(hss.cpu_time_delta)/1000000,3) cpu_time_s,
    round(sum(hss.iowait_delta)/1000000,3) iowait_s,
    round(sum(hss.clwait_delta)/1000000,3) clwait_s,
    round(sum(hss.apwait_delta)/1000000,3) apwait_s,
    round(sum(hss.ccwait_delta)/1000000,3) ccwait_s,
    round(sum(hss.rows_processed_delta),3) rows_processed,
    round(sum(hss.buffer_gets_delta),3) buffer_gets,
    round(sum(hss.disk_reads_delta),3) disk_reads,
    round(sum(hss.direct_writes_delta),3) direct_writes
from dba_hist_sqlstat hss, dba_hist_snapshot hs
where hss.snap_id=hs.snap_id
    and hs.snap_id between &snap_id_from and &snap_id_to
group by sql_id
order by &sort_col_nr desc nulls last)
where rownum<=&top_n;


SQL> pause

SQL>
SQL> @awr_top_by_sqlid_snaps.sql 25 50 5 10
SQL>
SQL> set ver off pages 50000 lines 260 tab off echo off

SQL_ID        DIFF_PLAN  DIFF_FMS              EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S    ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
------------- ---------- -------------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ ----------------- ----------------- ----------------- -----------------
0w2qpuc6u2zsp 0          0                         231889       2517.160     2966.522        1.957         .000         .022        8.430        231889.000          45060626             58971                 0
147a57cxq3w5y 0          0                         290416       1260.332     1476.165         .119         .000         .000        3.041        290432.000          10062391              3449                 0
c13sma6rkr27c #3         18298161888330075667      695504        579.615      624.629         .068         .000         .000         .130       3141269.000          19270840              2319                 0
01jzc2mg6cg92 0          0                          86872        298.917      285.065         .715         .000         .000         .962         86872.000           3726085             22116                 0
f7rxuxzt64k87 0          0                         595365        177.662      183.504         .940         .000         .000        3.921        595368.000           9466095             26787                 0
gzhkw1qu6fwxm 3241608609 0                         638465        127.138       88.481         .006         .000         .000        4.389        638463.000           2052941                58                 0
3fw75k1snsddx 494735477  0                         231877        122.990       90.754         .065         .000         .000        1.091        231876.000           3933240              1734                 0
5mddt5kt45rg3 1628223527 14366533292145951164      231905         88.169       50.906         .030         .000         .000         .890        231904.000           2234211               743                 0
apgb2g9q2zjh1 0          0                          29082         83.980       85.473        1.244         .000         .000         .218         29082.000            644899             38878                 0
8z3542ffmp562 1655552467 17991828121679737456      666150         75.843       39.644         .009         .000         .000         .132        602153.000           3805721               296                 0

10 rows selected.

SQL> pause

SQL>
SQL> @awr_top_by_sqlid_snaps.sql 25 50 7 10
SQL>
SQL> set ver off pages 50000 lines 260 tab off echo off

SQL_ID        DIFF_PLAN  DIFF_FMS              EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S    ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
------------- ---------- -------------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ ----------------- ----------------- ----------------- -----------------
0w2qpuc6u2zsp 0          0                         231889       2517.160     2966.522        1.957         .000         .022        8.430        231889.000          45060626             58971                 0
apgb2g9q2zjh1 0          0                          29082         83.980       85.473        1.244         .000         .000         .218         29082.000            644899             38878                 0
f7rxuxzt64k87 0          0                         595365        177.662      183.504         .940         .000         .000        3.921        595368.000           9466095             26787                 0
7t0959msvyt5g 856749079  4574318657274276452        29081          8.571        5.230         .836         .000         .000         .000         45474.000            133222             24590                 0
16bb7yq3ps4f9 0          0                              2          2.810        2.154         .763         .000         .000         .000             2.000            121068               372               791
01jzc2mg6cg92 0          0                          86872        298.917      285.065         .715         .000         .000         .962         86872.000           3726085             22116                 0
g81cbrq5yamf5 2480532011 15722349611718065978      260969         29.337       23.695         .582         .000         .000         .003        393409.000           1177450             18987                 0
gh2g2tynpcpv1 0          0                          86873         54.870       58.681         .507         .000         .000         .064         86873.000           1668076             15273                 0
buw7nxuggu81s 1404293401 17230481863806651164          18         37.235       35.943         .407         .000         .000         .000        507204.000            815703               384                 0
1qf3b7a46jm3u 1322380957 17373762679661231169       13459          3.358        3.493         .298         .000         .000         .000         39773.000             55391             10522                 0

10 rows selected.

SQL> pause

SQL>
SQL> @awr_top_by_sqlid_snaps.sql 25 50 12 10
SQL>
SQL> set ver off pages 50000 lines 260 tab off echo off

SQL_ID        DIFF_PLAN  DIFF_FMS              EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S    ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
------------- ---------- -------------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ ----------------- ----------------- ----------------- -----------------
0w2qpuc6u2zsp 0          0                         231889       2517.160     2966.522        1.957         .000         .022        8.430        231889.000          45060626             58971                 0
c13sma6rkr27c #3         18298161888330075667      695504        579.615      624.629         .068         .000         .000         .130       3141269.000          19270840              2319                 0
147a57cxq3w5y 0          0                         290416       1260.332     1476.165         .119         .000         .000        3.041        290432.000          10062391              3449                 0
f7rxuxzt64k87 0          0                         595365        177.662      183.504         .940         .000         .000        3.921        595368.000           9466095             26787                 0
3fw75k1snsddx 494735477  0                         231877        122.990       90.754         .065         .000         .000        1.091        231876.000           3933240              1734                 0
8z3542ffmp562 1655552467 17991828121679737456      666150         75.843       39.644         .009         .000         .000         .132        602153.000           3805721               296                 0
01jzc2mg6cg92 0          0                          86872        298.917      285.065         .715         .000         .000         .962         86872.000           3726085             22116                 0
5ckxyqfvu60pj 900611645  6486229150489758732       638509         73.013       53.327         .150         .000         .000         .091        638514.000           2554314              4454                 0
7r7636982atn9 2141863993 8080224161820109919       220567         42.672       50.602         .001         .000         .000         .020        602140.000           2421991                41                 0
5mddt5kt45rg3 1628223527 14366533292145951164      231905         88.169       50.906         .030         .000         .000         .890        231904.000           2234211               743                 0

10 rows selected.

SQL> pause

SQL>
SQL> -- Why is it good to see DIFF_PLANS?
SQL> pause

SQL> -- Look at the row for sql_id = c13sma6rkr27c
SQL> pause

SQL> @awr_sqlid_perf_trend_by_plan.sql 25 54 c13sma6rkr27c
SQL> set ver off pages 50000 lines 260 tab off echo off

TIME                PLAN_HASH_VALUE  EXECUTIONS ELAPSED_TIME_S_1E CPU_TIME_S_1E  IOWAIT_S_1E  CLWAIT_S_1E  APWAIT_S_1E  CCWAIT_S_1E ROWS_PROCESSED_1E     BUFFER_GETS_1E      DISK_READS_1E   DIRECT_WRITES_1E
------------------- --------------- ----------- ----------------- ------------- ------------ ------------ ------------ ------------ ----------------- ------------------ ------------------ ------------------
19.10.2014 10:39:43       725271039       29559              .001          .001         .000         .000         .000         .000             4.531             27.113               .075               .000
19.10.2014 10:50:11       725271039       30005              .001          .001         .000         .000         .000         .000             4.521             27.124               .000               .000
19.10.2014 11:00:14       725271039       30097              .001          .001         .000         .000         .000         .000             4.508             27.003               .000               .000
19.10.2014 11:10:16       725271039       29691              .001          .001         .000         .000         .000         .000             4.531             27.139               .000               .000
19.10.2014 11:20:17       725271039       30228              .001          .001         .000         .000         .000         .000             4.531             27.106               .000               .000
19.10.2014 11:30:19       725271039       30514              .001          .001         .000         .000         .000         .000             4.505             27.069               .000               .000
19.10.2014 11:40:21       725271039       29676              .001          .001         .000         .000         .000         .000             4.543             27.163               .000               .000
19.10.2014 11:50:23       725271039       29144              .001          .001         .000         .000         .000         .000             4.511             27.081               .000               .000
19.10.2014 12:00:25       725271039       29151              .001          .001         .000         .000         .000         .000             4.525             27.090               .000               .000
19.10.2014 12:10:26       725271039       29531              .001          .001         .000         .000         .000         .000             4.513             27.012               .000               .000
19.10.2014 12:20:30       725271039       29266              .001          .001         .000         .000         .000         .000             4.517             27.039               .000               .000
19.10.2014 12:30:31       725271039       29094              .001          .001         .000         .000         .000         .000             4.521             27.107               .000               .000
19.10.2014 12:40:34       725271039       29233              .001          .001         .000         .000         .000         .000             4.509             27.031               .000               .000
19.10.2014 12:50:35       725271039       29709              .001          .001         .000         .000         .000         .000             4.503             27.008               .000               .000
19.10.2014 13:00:37       725271039       29428              .001          .001         .000         .000         .000         .000             4.541             27.174               .000               .000
19.10.2014 13:10:38       725271039       29508              .001          .001         .000         .000         .000         .000             4.517             27.058               .000               .000
19.10.2014 13:20:42       725271039       28915              .001          .001         .000         .000         .000         .000             4.504             26.980               .000               .000
19.10.2014 13:30:43       725271039       29960              .001          .001         .000         .000         .000         .000             4.518             27.088               .000               .000
19.10.2014 13:40:45       725271039       29613              .001          .001         .000         .000         .000         .000             4.531             27.109               .000               .000
19.10.2014 13:50:46       725271039       29585              .001          .001         .000         .000         .000         .000             4.497             27.028               .000               .000
19.10.2014 14:00:51       725271039       45763              .001          .001         .000         .000         .000         .000             4.507             27.021               .000               .000
19.10.2014 14:10:54       214043693       49428              .001          .001         .000         .000         .000         .000             4.505             27.426               .001               .000
19.10.2014 14:20:56      3004904301        8406              .001          .001         .000         .000         .000         .000             4.485             77.567               .009               .000

23 rows selected.

SQL> pause

SQL> --let's look at two of the plans
SQL> select * from table(dbms_xplan.display_awr('c13sma6rkr27c',725271039));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID c13sma6rkr27c
--------------------
SELECT PRODUCTS.PRODUCT_ID, PRODUCT_NAME, PRODUCT_DESCRIPTION,
CATEGORY_ID, WEIGHT_CLASS, WARRANTY_PERIOD, SUPPLIER_ID,
PRODUCT_STATUS, LIST_PRICE, MIN_PRICE, CATALOG_URL, QUANTITY_ON_HAND
FROM PRODUCTS, INVENTORIES WHERE PRODUCTS.CATEGORY_ID = :B3 AND
INVENTORIES.PRODUCT_ID = PRODUCTS.PRODUCT_ID AND
INVENTORIES.WAREHOUSE_ID = :B2 AND ROWNUM < :B1

Plan hash value: 725271039

---------------------------------------------------------------------------------------------------------------
| Id  | Operation                              | Name                 | Rows  | Bytes | Cost (%CPU)| Time     |
---------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                       |                      |       |       |    33 (100)|          |
|   1 |  COUNT STOPKEY                         |                      |       |       |            |          |
|   2 |   NESTED LOOPS                         |                      |    14 |  5670 |    33   (0)| 00:00:01 |
|   3 |    HASH JOIN OUTER                     |                      |     9 |  3519 |    15   (0)| 00:00:01 |
|   4 |     TABLE ACCESS BY INDEX ROWID BATCHED| PRODUCT_INFORMATION  |     9 |  1584 |    10   (0)| 00:00:01 |
|   5 |      INDEX RANGE SCAN                  | PROD_CATEGORY_IX     |     9 |       |     1   (0)| 00:00:01 |
|   6 |     TABLE ACCESS BY INDEX ROWID BATCHED| PRODUCT_DESCRIPTIONS |     2 |   430 |     5   (0)| 00:00:01 |
|   7 |      INDEX SKIP SCAN                   | PRD_DESC_PK          |     2 |       |     4   (0)| 00:00:01 |
|   8 |    TABLE ACCESS BY INDEX ROWID         | INVENTORIES          |     2 |    28 |     2   (0)| 00:00:01 |
|   9 |     INDEX UNIQUE SCAN                  | INVENTORY_PK         |     1 |       |     1   (0)| 00:00:01 |
---------------------------------------------------------------------------------------------------------------

Note
-----
   - this is an adaptive plan


30 rows selected.

SQL> pause

SQL> select * from table(dbms_xplan.display_awr('c13sma6rkr27c',3004904301));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID c13sma6rkr27c
--------------------
SELECT PRODUCTS.PRODUCT_ID, PRODUCT_NAME, PRODUCT_DESCRIPTION,
CATEGORY_ID, WEIGHT_CLASS, WARRANTY_PERIOD, SUPPLIER_ID,
PRODUCT_STATUS, LIST_PRICE, MIN_PRICE, CATALOG_URL, QUANTITY_ON_HAND
FROM PRODUCTS, INVENTORIES WHERE PRODUCTS.CATEGORY_ID = :B3 AND
INVENTORIES.PRODUCT_ID = PRODUCTS.PRODUCT_ID AND
INVENTORIES.WAREHOUSE_ID = :B2 AND ROWNUM < :B1

Plan hash value: 3004904301

---------------------------------------------------------------------------------------------------------------
| Id  | Operation                              | Name                 | Rows  | Bytes | Cost (%CPU)| Time     |
---------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                       |                      |       |       |    33 (100)|          |
|   1 |  COUNT STOPKEY                         |                      |       |       |            |          |
|   2 |   NESTED LOOPS                         |                      |    14 |  5670 |    33   (0)| 00:00:01 |
|   3 |    NESTED LOOPS OUTER                  |                      |     9 |  3519 |    15   (0)| 00:00:01 |
|   4 |     TABLE ACCESS BY INDEX ROWID BATCHED| PRODUCT_INFORMATION  |     9 |  1584 |    10   (0)| 00:00:01 |
|   5 |      INDEX RANGE SCAN                  | PROD_CATEGORY_IX     |     9 |       |     1   (0)| 00:00:01 |
|   6 |     TABLE ACCESS BY INDEX ROWID        | PRODUCT_DESCRIPTIONS |     1 |   215 |     5   (0)| 00:00:01 |
|   7 |      INDEX UNIQUE SCAN                 | PRD_DESC_PK          |     2 |       |     4   (0)| 00:00:01 |
|   8 |    TABLE ACCESS BY INDEX ROWID         | INVENTORIES          |     2 |    28 |     2   (0)| 00:00:01 |
|   9 |     INDEX UNIQUE SCAN                  | INVENTORY_PK         |     1 |       |     1   (0)| 00:00:01 |
---------------------------------------------------------------------------------------------------------------

Note
-----
   - this is an adaptive plan


30 rows selected.

SQL> pause

SQL>
SQL> -- By The way these are adaptive plans, you can get more information about them!
SQL> pause

SQL> select * from table(dbms_xplan.display_awr('c13sma6rkr27c',725271039, format=>'+adaptive'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID c13sma6rkr27c
--------------------
SELECT PRODUCTS.PRODUCT_ID, PRODUCT_NAME, PRODUCT_DESCRIPTION,
CATEGORY_ID, WEIGHT_CLASS, WARRANTY_PERIOD, SUPPLIER_ID,
PRODUCT_STATUS, LIST_PRICE, MIN_PRICE, CATALOG_URL, QUANTITY_ON_HAND
FROM PRODUCTS, INVENTORIES WHERE PRODUCTS.CATEGORY_ID = :B3 AND
INVENTORIES.PRODUCT_ID = PRODUCTS.PRODUCT_ID AND
INVENTORIES.WAREHOUSE_ID = :B2 AND ROWNUM < :B1

Plan hash value: 725271039

-------------------------------------------------------------------------------------------------------------------
| Id  | Operation                                  | Name                 | Rows  | Bytes | Cost (%CPU)| Time     |
-------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                           |                      |       |       |    33 (100)|          |
|   1 |  COUNT STOPKEY                             |                      |       |       |            |          |
|-  2 |   HASH JOIN                                |                      |    14 |  5670 |    33   (0)| 00:00:01 |
|   3 |    NESTED LOOPS                            |                      |    14 |  5670 |    33   (0)| 00:00:01 |
|-  4 |     STATISTICS COLLECTOR                   |                      |       |       |            |          |
|   5 |      HASH JOIN OUTER                       |                      |     9 |  3519 |    15   (0)| 00:00:01 |
|-  6 |       NESTED LOOPS OUTER                   |                      |     9 |  3519 |    15   (0)| 00:00:01 |
|-  7 |        STATISTICS COLLECTOR                |                      |       |       |            |          |
|   8 |         TABLE ACCESS BY INDEX ROWID BATCHED| PRODUCT_INFORMATION  |     9 |  1584 |    10   (0)| 00:00:01 |
|   9 |          INDEX RANGE SCAN                  | PROD_CATEGORY_IX     |     9 |       |     1   (0)| 00:00:01 |
|- 10 |        TABLE ACCESS BY INDEX ROWID         | PRODUCT_DESCRIPTIONS |     1 |   215 |     5   (0)| 00:00:01 |
|- 11 |         INDEX UNIQUE SCAN                  | PRD_DESC_PK          |     2 |       |     4   (0)| 00:00:01 |
|  12 |       TABLE ACCESS BY INDEX ROWID BATCHED  | PRODUCT_DESCRIPTIONS |     2 |   430 |     5   (0)| 00:00:01 |
|  13 |        INDEX SKIP SCAN                     | PRD_DESC_PK          |     2 |       |     4   (0)| 00:00:01 |
|  14 |     TABLE ACCESS BY INDEX ROWID            | INVENTORIES          |     2 |    28 |     2   (0)| 00:00:01 |
|  15 |      INDEX UNIQUE SCAN                     | INVENTORY_PK         |     1 |       |     1   (0)| 00:00:01 |
|- 16 |    TABLE ACCESS BY INDEX ROWID BATCHED     | INVENTORIES          |     2 |    28 |     2   (0)| 00:00:01 |
|- 17 |     INDEX RANGE SCAN                       | INV_WAREHOUSE_IX     |     1 |       |     1   (0)| 00:00:01 |
-------------------------------------------------------------------------------------------------------------------

Note
-----
   - this is an adaptive plan (rows marked '-' are inactive)


38 rows selected.

SQL> pause

SQL> select * from table(dbms_xplan.display_awr('c13sma6rkr27c',3004904301, format=>'+adaptive'));

PLAN_TABLE_OUTPUT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
SQL_ID c13sma6rkr27c
--------------------
SELECT PRODUCTS.PRODUCT_ID, PRODUCT_NAME, PRODUCT_DESCRIPTION,
CATEGORY_ID, WEIGHT_CLASS, WARRANTY_PERIOD, SUPPLIER_ID,
PRODUCT_STATUS, LIST_PRICE, MIN_PRICE, CATALOG_URL, QUANTITY_ON_HAND
FROM PRODUCTS, INVENTORIES WHERE PRODUCTS.CATEGORY_ID = :B3 AND
INVENTORIES.PRODUCT_ID = PRODUCTS.PRODUCT_ID AND
INVENTORIES.WAREHOUSE_ID = :B2 AND ROWNUM < :B1

Plan hash value: 3004904301

-------------------------------------------------------------------------------------------------------------------
| Id  | Operation                                  | Name                 | Rows  | Bytes | Cost (%CPU)| Time     |
-------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                           |                      |       |       |    33 (100)|          |
|   1 |  COUNT STOPKEY                             |                      |       |       |            |          |
|-  2 |   HASH JOIN                                |                      |    14 |  5670 |    33   (0)| 00:00:01 |
|   3 |    NESTED LOOPS                            |                      |    14 |  5670 |    33   (0)| 00:00:01 |
|-  4 |     STATISTICS COLLECTOR                   |                      |       |       |            |          |
|-  5 |      HASH JOIN OUTER                       |                      |     9 |  3519 |    15   (0)| 00:00:01 |
|   6 |       NESTED LOOPS OUTER                   |                      |     9 |  3519 |    15   (0)| 00:00:01 |
|-  7 |        STATISTICS COLLECTOR                |                      |       |       |            |          |
|   8 |         TABLE ACCESS BY INDEX ROWID BATCHED| PRODUCT_INFORMATION  |     9 |  1584 |    10   (0)| 00:00:01 |
|   9 |          INDEX RANGE SCAN                  | PROD_CATEGORY_IX     |     9 |       |     1   (0)| 00:00:01 |
|  10 |        TABLE ACCESS BY INDEX ROWID         | PRODUCT_DESCRIPTIONS |     1 |   215 |     5   (0)| 00:00:01 |
|  11 |         INDEX UNIQUE SCAN                  | PRD_DESC_PK          |     2 |       |     4   (0)| 00:00:01 |
|- 12 |       TABLE ACCESS BY INDEX ROWID BATCHED  | PRODUCT_DESCRIPTIONS |     2 |   430 |     5   (0)| 00:00:01 |
|- 13 |        INDEX SKIP SCAN                     | PRD_DESC_PK          |     2 |       |     4   (0)| 00:00:01 |
|  14 |     TABLE ACCESS BY INDEX ROWID            | INVENTORIES          |     2 |    28 |     2   (0)| 00:00:01 |
|  15 |      INDEX UNIQUE SCAN                     | INVENTORY_PK         |     1 |       |     1   (0)| 00:00:01 |
|- 16 |    TABLE ACCESS BY INDEX ROWID BATCHED     | INVENTORIES          |     2 |    28 |     2   (0)| 00:00:01 |
|- 17 |     INDEX RANGE SCAN                       | INV_WAREHOUSE_IX     |     1 |       |     1   (0)| 00:00:01 |
-------------------------------------------------------------------------------------------------------------------

Note
-----
   - this is an adaptive plan (rows marked '-' are inactive)


38 rows selected.

SQL> pause

SQL>
SQL> -- Querying the AWR tables directy gives more flexibility, but provides basically the same results as THe AWR report.
SQL>
SQL> @awr_top_fms_demo.sql
SQL> set pages 50000 lines 238 tab off serverout on echo off
SQL> alter session set container = sample;

Session altered.

SQL>
SQL> -- Let's see how sorting by elapsed time looks when we aggregate by FORCE_MATCHING_SIGNATURE
SQL> pause

SQL>
SQL> -- Look at this crazy script!
SQL> !cat awr_top_by_fms_snaps.sql
set ver off pages 50000 lines 260 tab off echo off
undef snap_id_from
undef snap_id_to
undef sort_col_nr
undef top_n
def snap_id_from="&1"
def snap_id_to="&2"
def sort_col_nr="&3"
def top_n="&4"
col executions for 9999999999
col rows_processed for 99999999999
col elapsed_time_s for 9999999.999
col cpu_time_s for 9999999.999
col iowait_s for 9999999.999
col clwait_s for 9999999.999
col apwait_s for 9999999.999
col ccwait_s for 9999999.999
col buffer_gets for 9999999999999999
col disk_reads for 9999999999999999
col direct_writes for 9999999999999999
col diff_sqlid for a13
col diff_plan for a10
col diff_fms for a20

select * from (
select to_char(force_matching_signature) diff_fms,
    decode(count(unique(plan_hash_value)),1,to_char(max(plan_hash_value)),'#'||count(unique(plan_hash_value))) diff_plan,
    decode(count(unique(sql_id)),1,max(sql_id),'#'||count(unique(sql_id))) diff_sqlid,
    sum(hss.executions_delta) executions,
    round(sum(hss.elapsed_time_delta)/1000000,3) elapsed_time_s,
    round(sum(hss.cpu_time_delta)/1000000,3) cpu_time_s,
    round(sum(hss.iowait_delta)/1000000,3) iowait_s,
    round(sum(hss.clwait_delta)/1000000,3) clwait_s,
    round(sum(hss.apwait_delta)/1000000,3) apwait_s,
    round(sum(hss.ccwait_delta)/1000000,3) ccwait_s,
    round(sum(hss.rows_processed_delta),3) rows_processed,
    round(sum(hss.buffer_gets_delta),3) buffer_gets,
    round(sum(hss.disk_reads_delta),3) disk_reads,
    round(sum(hss.direct_writes_delta),3) direct_writes
from dba_hist_sqlstat hss, dba_hist_snapshot hs
where hss.snap_id=hs.snap_id
    and hs.snap_id between &snap_id_from and &snap_id_to
group by force_matching_signature
order by &sort_col_nr desc)
where rownum<=&top_n;

SQL> pause

SQL>
SQL> @awr_top_by_fms_snaps.sql 25 50 5 10
SQL> set ver off pages 50000 lines 260 tab off echo off

DIFF_FMS             DIFF_PLAN  DIFF_SQLID     EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
-------------------- ---------- ------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ -------------- ----------------- ----------------- -----------------
0                    #23        #57               2462768       4825.257     5416.525        6.905         .000         .022       22.409        2462955          79731662            185393               791
18298161888330075667 #3         c13sma6rkr27c      695504        579.615      624.629         .068         .000         .000         .130        3141269          19270840              2319                 0
5985318870031566873  1081153563 #999               835562        306.699      253.610         .034         .000         .000         .242       11697868           7571650              1029                 0
14366533292145951164 1628223527 5mddt5kt45rg3      231905         88.169       50.906         .030         .000         .000         .890         231904           2234211               743                 0
17991828121679737456 1655552467 8z3542ffmp562      666150         75.843       39.644         .009         .000         .000         .132         602153           3805721               296                 0
6486229150489758732  900611645  5ckxyqfvu60pj      638509         73.013       53.327         .150         .000         .000         .091         638514           2554314              4454                 0
2672114946588399948  1388734953 c749bc43qqfz3      638186         47.942       16.981         .000         .000         .000         .053         638465                 3                 0                 0
8080224161820109919  2141863993 7r7636982atn9      220567         42.672       50.602         .001         .000         .000         .020         602140           2421991                41                 0
17230481863806651164 1404293401 buw7nxuggu81s          18         37.235       35.943         .407         .000         .000         .000         507204            815703               384                 0
15722349611718065978 2480532011 g81cbrq5yamf5      260969         29.337       23.695         .582         .000         .000         .003         393409           1177450             18987                 0

10 rows selected.

SQL> pause

SQL>
SQL> -- What is FMS=0?
SQL> pause

SQL> @awr_top_by_fms_detail_snaps.sql 25 50 5 15 0
SQL> set ver off pages 50000 lines 260 tab off echo off

DIFF_FMS             DIFF_PLAN  SQL_ID         EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
-------------------- ---------- ------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ -------------- ----------------- ----------------- -----------------
0                    0          0w2qpuc6u2zsp      231889       2517.160     2966.522        1.957         .000         .022        8.430         231889          45060626             58971                 0
0                    0          147a57cxq3w5y      290416       1260.332     1476.165         .119         .000         .000        3.041         290432          10062391              3449                 0
0                    0          01jzc2mg6cg92       86872        298.917      285.065         .715         .000         .000         .962          86872           3726085             22116                 0
0                    0          f7rxuxzt64k87      595365        177.662      183.504         .940         .000         .000        3.921         595368           9466095             26787                 0
0                    3241608609 gzhkw1qu6fwxm      638465        127.138       88.481         .006         .000         .000        4.389         638463           2052941                58                 0
0                    494735477  3fw75k1snsddx      231877        122.990       90.754         .065         .000         .000        1.091         231876           3933240              1734                 0
0                    0          apgb2g9q2zjh1       29082         83.980       85.473        1.244         .000         .000         .218          29082            644899             38878                 0
0                    0          cmndgkbkcz5s9       57765         64.341       68.699         .096         .000         .000         .083          57765            414169              2811                 0
0                    0          gh2g2tynpcpv1       86873         54.870       58.681         .507         .000         .000         .064          86873           1668076             15273                 0
0                    0          a9gvfh5hx9u98       29213         53.916       52.549         .251         .000         .000         .042          29213            847081              6981                 0
0                    0          budtrjayjnvw3       86873         30.219       27.506         .106         .000         .000         .053          86873            658802              3609                 0
0                    0          9t3n2wpr7my63       96723         29.138       29.363         .119         .000         .000         .029          96723           1057785              3644                 0
0                    0          16bb7yq3ps4f9           2          2.810        2.154         .763         .000         .000         .000              2            121068               372               791
0                    0          39k4gf5t0831y          55           .370         .353         .002         .000         .000         .000              0              1615                72                 0
0                    0          adzjh275fvvx4           8           .324         .309         .004         .000         .000         .002              0              3237               160                 0

15 rows selected.

SQL> pause

SQL>
SQL> -- Let's look at some of these queries
SQL> pause

SQL> @awr_show_sqlid.sql 0w2qpuc6u2zsp
SQL> set ver off pages 50000 lines 32000 tab off long 9999999 timing off echo off
### Occurrences in ASH (DBA_HIST_ACTIVE_SESS_HISTORY):

SQL_ID        PROGRAM                        MODULE                         ACTION                         CLIENT_ID                        COUNT(*)
------------- ------------------------------ ------------------------------ ------------------------------ ------------------------------ ----------
0w2qpuc6u2zsp JDBC Thin Client               New Order                                                     Swingbench                            220
0w2qpuc6u2zsp JDBC Thin Client               New Order                      getProductQuantity             Swingbench                             24
0w2qpuc6u2zsp JDBC Thin Client               New Order                      logon                          Swingbench                             19
0w2qpuc6u2zsp JDBC Thin Client               New Order                      getProductDetailsByCategory    Swingbench                             18
0w2qpuc6u2zsp JDBC Thin Client                                                                             Swingbench                              9
0w2qpuc6u2zsp JDBC Thin Client               New Order                      getCardDetailsByCustomerID     Swingbench                              1

6 rows selected.

### The Statement (DBA_HIST_SQLTEXT):
BEGIN :1 := orderentry.neworder(:2 ,:3 ,:4 ); END;

SQL> pause

SQL> @awr_show_sqlid.sql gzhkw1qu6fwxm
SQL> set ver off pages 50000 lines 32000 tab off long 9999999 timing off echo off
### Occurrences in ASH (DBA_HIST_ACTIVE_SESS_HISTORY):

SQL_ID        PROGRAM                        MODULE                         ACTION                         CLIENT_ID                        COUNT(*)
------------- ------------------------------ ------------------------------ ------------------------------ ------------------------------ ----------
gzhkw1qu6fwxm JDBC Thin Client               Update Customer Details        logon                          Swingbench                              4
gzhkw1qu6fwxm JDBC Thin Client               Browse Products                logon                          Swingbench                              2
gzhkw1qu6fwxm JDBC Thin Client               New Order                      logon                          Swingbench                              2
gzhkw1qu6fwxm JDBC Thin Client               Browse and Update Orders       logon                          Swingbench                              2

### The Statement (DBA_HIST_SQLTEXT):
INSERT INTO LOGON (LOGON_ID,CUSTOMER_ID, LOGON_DATE) VALUES (LOGON_SEQ.NEXTVAL, :B2 , :B1 )

SQL> pause

SQL>
SQL> -- Let's take a closer look at these 999 queries in the TOP 3rd place.
SQL> pause

SQL> @awr_top_by_fms_detail_snaps.sql 25 50 5 15 5985318870031566873
SQL> set ver off pages 50000 lines 260 tab off echo off

DIFF_FMS             DIFF_PLAN  SQL_ID         EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
-------------------- ---------- ------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ -------------- ----------------- ----------------- -----------------
5985318870031566873  1081153563 2y383xj04ztf6         812          4.587        4.544         .000         .000         .000         .000          11368              7319                 1                 0
5985318870031566873  1081153563 dra5rjs03kmad         891           .447         .354         .000         .000         .000         .049          12474              8461                 9                 0
5985318870031566873  1081153563 4v95sjusy6ba3         822           .394         .308         .000         .000         .000         .049          11508              8465                 3                 0
5985318870031566873  1081153563 6j47tkwf6as3j         824           .365         .261         .000         .000         .000         .049          11536              7509                 3                 0
5985318870031566873  1081153563 535x28j7nyrr2         940           .362         .315         .000         .000         .000         .000          13160              8468                 1                 0
5985318870031566873  1081153563 0ab0gy4bczs5b         886           .362         .300         .000         .000         .000         .000          12404              7982                 1                 0
5985318870031566873  1081153563 agb1t4y0yaqgn         983           .361         .306         .000         .000         .000         .000          13762              8871                 1                 0
5985318870031566873  1081153563 fh5pm06vpmr94         816           .356         .275         .000         .000         .000         .000          11424              7359                 1                 0
5985318870031566873  1081153563 80jvzncm78pvc         916           .353         .303         .000         .000         .000         .010          12824              8252                 1                 0
5985318870031566873  1081153563 6hkpgmmcft2k1         899           .353         .291         .000         .000         .000         .000          12586              9897                 2                 0
5985318870031566873  1081153563 57m0ndunjn7nr         912           .350         .296         .000         .000         .000         .000          12768              8216                 1                 0
5985318870031566873  1081153563 6d2mtjqhduv5y         882           .350         .315         .000         .000         .000         .000          12348              8831                 2                 0
5985318870031566873  1081153563 b3mnsjcwsa39x         830           .349         .321         .000         .000         .000         .000          11620              8323                 2                 0
5985318870031566873  1081153563 7kd85hj9xp0vs         950           .348         .306         .000         .000         .000         .000          13300              8558                 1                 0
5985318870031566873  1081153563 1wjyhzcswq737         931           .346         .273         .000         .000         .000         .000          13034              8387                 1                 0

15 rows selected.

SQL> pause

SQL>
SQL> -- Let's look at some of these queries
SQL> pause

SQL> @awr_show_sqlid.sql 2y383xj04ztf6
SQL> set ver off pages 50000 lines 32000 tab off long 9999999 timing off echo off
### Occurrences in ASH (DBA_HIST_ACTIVE_SESS_HISTORY):

no rows selected

### The Statement (DBA_HIST_SQLTEXT):
SELECT products.PRODUCT_ID,
PRODUCT_NAME,
PRODUCT_DESCRIPTION,
CATEGORY_ID,
WEIGHT_CLASS,
WARRANTY_PERIOD,
SUPPLIER_ID,
PRODUCT_STATUS,
LIST_PRICE,
MIN_PRICE,
CATALOG_URL,
QUANTITY_ON_HAND
FROM products,
inventories
WHERE products.product_id = 782
AND inventories.product_id = products.product_id
AND rownum < 15


SQL> pause

SQL>
SQL> @awr_show_sqlid.sql dra5rjs03kmad
SQL> set ver off pages 50000 lines 32000 tab off long 9999999 timing off echo off
### Occurrences in ASH (DBA_HIST_ACTIVE_SESS_HISTORY):

no rows selected

### The Statement (DBA_HIST_SQLTEXT):
SELECT products.PRODUCT_ID,
PRODUCT_NAME,
PRODUCT_DESCRIPTION,
CATEGORY_ID,
WEIGHT_CLASS,
WARRANTY_PERIOD,
SUPPLIER_ID,
PRODUCT_STATUS,
LIST_PRICE,
MIN_PRICE,
CATALOG_URL,
QUANTITY_ON_HAND
FROM products,
inventories
WHERE products.product_id = 195
AND inventories.product_id = products.product_id
AND rownum < 15


SQL> pause

SQL>
SQL> -- Sorting by FORCE_MATCHING_SIGNATURE allowed me to identify a significant consumer query that doesn't utilize binds
SQL>
SQL>
SQL> @awr_top_plan_demo.sql
SQL> set pages 50000 lines 238 tab off serverout on echo off
SQL> alter session set container = sample;

Session altered.

SQL>
SQL> -- Let's see how sorting by elapsed time looks when we aggregate by PLAN_HASH_VALUE
SQL> pause

SQL>
SQL> -- Look at this crazy script!
SQL> !cat awr_top_by_plan_snaps.sql
set ver off pages 50000 lines 260 tab off echo off
undef snap_id_from
undef snap_id_to
undef sort_col_nr
undef top_n
def snap_id_from="&1"
def snap_id_to="&2"
def sort_col_nr="&3"
def top_n="&4"
col executions for 9999999999
col rows_processed for 99999999999
col elapsed_time_s for 9999999.999
col cpu_time_s for 9999999.999
col iowait_s for 9999999.999
col clwait_s for 9999999.999
col apwait_s for 9999999.999
col ccwait_s for 9999999.999
col buffer_gets for 9999999999999999
col disk_reads for 9999999999999999
col direct_writes for 9999999999999999
col diff_sqlid for a13
col diff_plan for a10
col diff_fms for a20

select * from (
select to_char(plan_hash_value) diff_plan,
    decode(count(unique(sql_id)),1,max(sql_id),'#'||count(unique(sql_id))) diff_sqlid,
    decode(count(unique(force_matching_signature)),1,to_char(max(force_matching_signature)),'#'||count(unique(force_matching_signature))) diff_fms,
    sum(hss.executions_delta) executions,
    round(sum(hss.elapsed_time_delta)/1000000,3) elapsed_time_s,
    round(sum(hss.cpu_time_delta)/1000000,3) cpu_time_s,
    round(sum(hss.iowait_delta)/1000000,3) iowait_s,
    round(sum(hss.clwait_delta)/1000000,3) clwait_s,
    round(sum(hss.apwait_delta)/1000000,3) apwait_s,
    round(sum(hss.ccwait_delta)/1000000,3) ccwait_s,
    round(sum(hss.rows_processed_delta),3) rows_processed,
    round(sum(hss.buffer_gets_delta),3) buffer_gets,
    round(sum(hss.disk_reads_delta),3) disk_reads,
    round(sum(hss.direct_writes_delta),3) direct_writes
from dba_hist_sqlstat hss, dba_hist_snapshot hs
where hss.snap_id=hs.snap_id
    and hs.snap_id between &snap_id_from and &snap_id_to
group by plan_hash_value
order by &sort_col_nr desc)
where rownum<=&top_n;

SQL> pause

SQL>
SQL> @awr_top_by_plan_snaps.sql 25 50 5 10
SQL> set ver off pages 50000 lines 260 tab off echo off

DIFF_PLAN  DIFF_SQLID    DIFF_FMS              EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
---------- ------------- -------------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ -------------- ----------------- ----------------- -----------------
0          #32           0                        1591480       4574.840     5237.021        6.831         .000         .022       16.921        1591422          73737483            183290               791
725271039  c13sma6rkr27c 18298161888330075667      637670        521.987      571.116         .063         .000         .000         .059        2880918          17263182              2209                 0
1081153563 #999          5985318870031566873       835562        306.699      253.610         .034         .000         .000         .242       11697868           7571650              1029                 0
3241608609 gzhkw1qu6fwxm 0                         638465        127.138       88.481         .006         .000         .000        4.389         638463           2052941                58                 0
494735477  3fw75k1snsddx 0                         231877        122.990       90.754         .065         .000         .000        1.091         231876           3933240              1734                 0
1628223527 #3            #3                        274516        106.226       63.743         .201         .000         .000         .892         274515           2667630              4995                 0
1655552467 8z3542ffmp562 17991828121679737456      666150         75.843       39.644         .009         .000         .000         .132         602153           3805721               296                 0
900611645  5ckxyqfvu60pj 6486229150489758732       638509         73.013       53.327         .150         .000         .000         .091         638514           2554314              4454                 0
214043693  c13sma6rkr27c 18298161888330075667       49428         52.195       48.078         .003         .000         .000         .071         222650           1355632                36                 0
1388734953 #2            #2                        638196         47.943       16.982         .000         .000         .000         .053         638475                 3                 0                 0

10 rows selected.

SQL> pause

SQL>
SQL> -- What is plan 1628223527?
SQL> pause

SQL> @awr_top_by_plan_detail_snaps.sql 25 50 5 15 1628223527
SQL> set ver off pages 50000 lines 260 tab off echo off

DIFF_PLAN  DIFF_SQLID    DIFF_FMS              EXECUTIONS ELAPSED_TIME_S   CPU_TIME_S     IOWAIT_S     CLWAIT_S     APWAIT_S     CCWAIT_S ROWS_PROCESSED       BUFFER_GETS        DISK_READS     DIRECT_WRITES
---------- ------------- -------------------- ----------- -------------- ------------ ------------ ------------ ------------ ------------ -------------- ----------------- ----------------- -----------------
1628223527 5mddt5kt45rg3 14366533292145951164      231905         88.169       50.906         .030         .000         .000         .890         231904           2234211               743                 0
1628223527 f9u2k84v884y7 2971448457592404441        29209         16.175       10.984         .171         .000         .000         .002          29209            379803              4249                 0
1628223527 3hatpjzrqvfn7 13119154137972506400       13402          1.882        1.853         .000         .000         .000         .000          13402             53616                 3                 0

SQL> pause

SQL>
SQL> -- Let's look at some of these queries
SQL> pause

SQL> @awr_show_sqlid.sql 5mddt5kt45rg3
SQL> set ver off pages 50000 lines 32000 tab off long 9999999 timing off echo off
### Occurrences in ASH (DBA_HIST_ACTIVE_SESS_HISTORY):

SQL_ID        PROGRAM                        MODULE                         ACTION                         CLIENT_ID                        COUNT(*)
------------- ------------------------------ ------------------------------ ------------------------------ ------------------------------ ----------
5mddt5kt45rg3 JDBC Thin Client               New Order                                                     Swingbench                             18

### The Statement (DBA_HIST_SQLTEXT):
UPDATE ORDERS SET ORDER_MODE = 'online', ORDER_STATUS = FLOOR(DBMS_RANDOM.VALUE(0, :B3 )), ORDER_TOTAL = :B2 WHERE ORDER_ID = :B1

SQL> pause

SQL> @awr_show_sqlid.sql f9u2k84v884y7
SQL> set ver off pages 50000 lines 32000 tab off long 9999999 timing off echo off
### Occurrences in ASH (DBA_HIST_ACTIVE_SESS_HISTORY):

SQL_ID        PROGRAM                        MODULE                         ACTION                         CLIENT_ID                        COUNT(*)
------------- ------------------------------ ------------------------------ ------------------------------ ------------------------------ ----------
f9u2k84v884y7 JDBC Thin Client               Process Orders                                                Swingbench                              3

### The Statement (DBA_HIST_SQLTEXT):
UPDATE /*+ index(orders, order_pk) */ ORDERS SET ORDER_STATUS = FLOOR(DBMS_RANDOM.VALUE(:B3 + 1, :B2 )) WHERE ORDER_ID = :B1

SQL> pause

SQL>
SQL> -- Is the plan the same, really?
SQL> pause

SQL> select * from table(dbms_xplan.display_awr('5mddt5kt45rg3',1628223527));
SQL_ID 5mddt5kt45rg3
--------------------
UPDATE ORDERS SET ORDER_MODE = 'online', ORDER_STATUS =
FLOOR(DBMS_RANDOM.VALUE(0, :B3 )), ORDER_TOTAL = :B2 WHERE ORDER_ID =
:B1

Plan hash value: 1628223527

-------------------------------------------------------------------------------
| Id  | Operation          | Name     | Rows  | Bytes | Cost (%CPU)| Time     |
-------------------------------------------------------------------------------
|   0 | UPDATE STATEMENT   |          |       |       |     3 (100)|          |
|   1 |  UPDATE            | ORDERS   |       |       |            |          |
|   2 |   INDEX UNIQUE SCAN| ORDER_PK |     1 |    58 |     2   (0)| 00:00:01 |
-------------------------------------------------------------------------------


16 rows selected.

SQL> pause

SQL> select * from table(dbms_xplan.display_awr('f9u2k84v884y7',1628223527));
SQL_ID f9u2k84v884y7
--------------------
UPDATE /*+ index(orders, order_pk) */ ORDERS SET ORDER_STATUS =
FLOOR(DBMS_RANDOM.VALUE(:B3 + 1, :B2 )) WHERE ORDER_ID = :B1

Plan hash value: 1628223527

-------------------------------------------------------------------------------
| Id  | Operation          | Name     | Rows  | Bytes | Cost (%CPU)| Time     |
-------------------------------------------------------------------------------
|   0 | UPDATE STATEMENT   |          |       |       |     3 (100)|          |
|   1 |  UPDATE            | ORDERS   |       |       |            |          |
|   2 |   INDEX UNIQUE SCAN| ORDER_PK |     1 |    39 |     2   (0)| 00:00:01 |
-------------------------------------------------------------------------------


15 rows selected.

SQL> pause

SQL> -- Looking at the top execution plans in the system can help finding inefficient access paths to the data
SQL>
SQL>
SQL>
SQL>